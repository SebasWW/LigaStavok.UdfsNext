{
  "Provider": {
    "UserName": "firuza.hismatullina@ligastavok.ru",
    "Password": "Liga2020",
    "WebSocketUrl": "wss://partner.sportlevel.com/highway",
    "WebApiUrl": "https://partner.sportlevel.com",
    "MetaRefreshInterval": "00:01:00"
  },
  "Cluster": {
    "ClusterId": "msk",
    "ServiceId": "udfs_provider_sportlevel",
    "Endpoint": {
      "SiloPort": "11111",
      "GatewayPort": "30000"
      //"AdvertisedIPAddress": "",
      //"SiloListeningIP": "",
      //"SiloListeningPort": 0,
      //"GatewayListeningIP": "",
      //"GatewayListeningPort": 
    },
    "Membership": {
      "Enabled": false,
      "ConnectionString": "Persist Security Info=False;Server=DBMSSQL-01.dev.oscaryard.local;Database=UdfsCluster;Trusted_Connection=True;",
      "Provider": "System.Data.SqlClient"
    },
    "Storage": {
      "Enabled": false,
      "ConnectionString": "",
      "Provider": "System.Data.SqlClient"
    },
    "Reminder": {
      "Enabled": false,
      "ConnectionString": "",
      "Provider": "System.Data.SqlClient"
    }
  },
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft": "Warning",
      "Microsoft.Hosting.Lifetime": "Information"
    }
  },
  "transmitter": {
    "endpoint": {
      "enabled": false,
      "host": "127.0.0.1",
      "password": "udfs-transmitter",
      "port": 5672,
      "queue": "udfs-transmitter",
      "user-name": "udfs-transmitter"
    },
    "messages": {
      "add-translations": {
        "abort-bets-on-error": false,
        "priority": 10,
        "retry-count": 10,
        "retry-interval": "00:00:05",
        "timeout": "0:00:30",
        "ttl": "1"
      },
      "cancel-bets": {
        "abort-bets-on-error": false,
        "priority": 3,
        "retry-count": 3,
        "retry-interval": "0:00:05",
        "timeout": "0:00:20",
        "ttl": "1"
      },
      "correct-markets": {
        "abort-bets-on-error": true,
        "priority": 2,
        "retry-count": 3,
        "retry-interval": "0",
        "timeout": "0:00:20",
        "ttl": "0:10:00"
      },
      "create-results": {
        "abort-bets-on-error": true,
        "priority": 5,
        "retry-count": 10,
        "retry-interval": "0:00:03",
        "timeout": "0:00:20",
        "ttl": "1"
      },
      "create-update-gameevent": {
        "abort-bets-on-error": false,
        "priority": 6,
        "retry-count": 10,
        "retry-interval": "0:00:05",
        "timeout": "0:00:20",
        "ttl": "1:00:00"
      },
      "create-update-markets": {
        "abort-bets-on-error": true,
        "priority": 2,
        "retry-count": 3,
        "retry-interval": "0",
        "timeout": "0:00:10",
        "ttl": "0:01:15"
      },
      "keep-alive": {
        "abort-bets-on-error": false,
        "priority": 3,
        "retry-count": 0,
        "retry-interval": "0",
        "timeout": "0:00:15",
        "ttl": "0:01:00"
      },
      "rollback-results": {
        "abort-bets-on-error": false,
        "priority": 3,
        "retry-count": 3,
        "retry-interval": "0:00:05",
        "timeout": "0:00:20",
        "ttl": "1"
      },
      "start-gameevent-bets": {
        "abort-bets-on-error": false,
        "priority": 3,
        "retry-count": 3,
        "retry-interval": "0:00:01",
        "timeout": "0:00:20",
        "ttl": "1:00:00"
      },
      "stop-gameevent-bets": {
        "abort-bets-on-error": true,
        "priority": 1,
        "retry-count": 30,
        "retry-interval": "0",
        "timeout": "0:00:10",
        "ttl": "15"
      },
      "stop-lineservice-bets": {
        "abort-bets-on-error": true,
        "priority": 1,
        "retry-count": 0,
        "retry-interval": "0",
        "timeout": "0:00:20",
        "ttl": "10"
      },
      "undo-cancel-bets": {
        "abort-bets-on-error": false,
        "priority": 3,
        "retry-count": 3,
        "retry-interval": "0:00:05",
        "timeout": "0:00:20",
        "ttl": "1"
      },
      "update-gameevent-state": {
        "abort-bets-on-error": false,
        "priority": 6,
        "retry-count": 10,
        "retry-interval": "0:01",
        "timeout": "0:00:20",
        "ttl": "1:00:00"
      }

    },
    "sql": {
      "connection-string": "Data Source=dbmssql-01.dev.oscaryard.local;Initial Catalog=Oscaryard_devel;User ID=udfs_v1;Password=3AbFcSUcGrk;Application Name=UDFS_Transmitter_UnifiedFeed",
      "number-of-connections": 5,
      "recoverable-error-codes": [
        -2,
        701,
        1204,
        1205,
        1222,
        7214,
        7604,
        7618,
        8628,
        8645,
        8651,
        81700,
        55107
      ]
    }
  },
  "akka": {
    "logLevel": "DEBUG",
    "stdoutLogLevel": "INFO"
  },
  "logs": {
    "project": "udfs-SportLevel",
    "console": {
      "isEnabled": true
    },
    "file": {
      "isEnabled": true,
      "path": "C:\\UdfsNext\\SportLevel\\logs",
      "name": "SportLevel"
    },
    "udp": {
      "isEnabled": true,
      "host": "logstash.dev.oscaryard.local",
      "port": "9500"
    },
    "rules": [
      {
        "pattern": "Dumps",
        "level": "DEBUG",
        "targets": "udp"
      },
      {
        "pattern": "Udfs.*",
        "level": "DEBUG",
        "targets": "console, file, udp"
      }
    ]
  },
  "dumps": {
    "skipAlive": false,
    "useToTransmitterDumps": true,
    "useTransmitter": true,
    "toFiles": {
      "isEnabled": true,
      "path": "C:\\UdfsNext\\SportLevel\\dumps"
    },
    "toLogs": {
      "isEnabled": false,
      "Logger": "Dumps"
    }
  },
  "archiverJobs": [
    {
      "zip": "logs",
      "dir": "C:\\UdfsNext\\SportLevel\\logs",
      "retentionPeriod": "7.00:00:00",
      "archiveAt": "04:00:00"
    },
    {
      "zip": "dumps",
      "dir": "C:\\UdfsNext\\SportLevel\\dumps",
      "retentionPeriod": "7.00:00:00",
      "archiveAt": "04:01:00"
    }
  ]
}
